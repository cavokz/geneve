name: Main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: make prereq

      - name: Lint code
        run: make lint

      - name: Run unit tests
        env:
          TEST_SCHEMA_URI: "https://github.com/elastic/ecs/archive/refs/tags/v8.1.0.tar.gz"
          TEST_DETECTION_RULES_URI: "https://github.com/elastic/detection-rules/archive/refs/tags/v8.1.0.tar.gz"
        run: make tests

  online-tests-oldest:
    name: Online tests (oldest)
    needs: unit-tests
    uses: ./.github/workflows/online-tests.yml
    with:
      schema-uri: "https://github.com/elastic/ecs/archive/refs/tags/v8.1.0.tar.gz"
      detection-rules-uri: "https://github.com/elastic/detection-rules/archive/refs/tags/v8.1.0.tar.gz"
      python-version: "3.8"
      stack-version: 7.15.0
      runs-on: ubuntu-18.04

  online-tests-latest:
    name: Online tests (latest)
    needs: unit-tests
    uses: ./.github/workflows/online-tests.yml
    with:
      schema-uri: "https://github.com/elastic/ecs/archive/refs/tags/v8.1.0.tar.gz"
      detection-rules-uri: "https://github.com/elastic/detection-rules/archive/refs/tags/v8.1.0.tar.gz"
      python-version: "3.10"
      stack-version: 8.1.2
      runs-on: ubuntu-latest

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - online-tests-oldest
      - online-tests-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: make prereq

      - name: Build package
        run: make pkg_build

      - name: Install package
        run: make pkg_install

      - name: Try package
        run: make pkg_try

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        if: github.repository != 'elastic/geneve'
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          print_hash: true
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        if: github.repository == 'elastic/geneve'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          print_hash: true
