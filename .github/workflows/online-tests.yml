on:
  workflow_call:
    inputs:
      stack-version:
        required: true
        type: string
      schema-uri:
        required: true
        type: string
      detection-rules-uri:
        required: true
        type: string
      python-version:
        required: true
        type: string

jobs:
  online-tests:
    name: Elastic Stack ${{ inputs.stack-version }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python ${{ inputs.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: make prereq

      - name: Setup cache
        id: elastic-stack-cache
        uses: actions/cache@v2
        with:
          key: elastic-stack-cache-${{ inputs.stack-version }}
          path: ~/elastic-stack-cache

      - name: Reuse Elastic Stack ${{ inputs.stack-version }} Docker images
        if: steps.elastic-stack-cache.outputs.cache-hit == 'true'
        run: |
          docker load -i ~/elastic-stack-cache/elasticsearch-${{ inputs.stack-version }}.tar
          docker load -i ~/elastic-stack-cache/kibana-${{ inputs.stack-version }}.tar

      - name: Pull Elastic Stack ${{ inputs.stack-version }} Docker images
        if: steps.elastic-stack-cache.outputs.cache-hit != 'true'
        env:
          TEST_STACK_VERSION: ${{ inputs.stack-version }}
        run: |
          mkdir ~/elastic-stack-cache
          docker compose pull -q
          docker save -o ~/elastic-stack-cache/elasticsearch-${{ inputs.stack-version }}.tar \
            docker.elastic.co/elasticsearch/elasticsearch:${{ inputs.stack-version }}
          docker save -o ~/elastic-stack-cache/kibana-${{ inputs.stack-version }}.tar \
            docker.elastic.co/kibana/kibana:${{ inputs.stack-version }}

      - name: Start Elastic Stack ${{ inputs.stack-version }}
        env:
          TEST_STACK_VERSION: ${{ inputs.stack-version }}
        run: docker compose up --wait --quiet-pull

      - name: Run online tests
        env:
          TEST_SCHEMA_URI: ${{ inputs.schema-uri }}
          TEST_DETECTION_RULES_URI: ${{ inputs.detection-rules-uri }}
        run: make online_tests

      - name: Stop Elastic Stack ${{ inputs.stack-version }}
        run: docker compose down
